0 value file1

: r/o[  ( a c - )
    cr ." Reading " 2dup type r/o open-file abort" Open file error" to file1 ;

: w/o[  ( a c - )
    cr ." Writing " 2dup type 2dup w/o open-file if
        w/o create-file abort" Open file error"
    else  2drop  then  to file1 ;

: ]file  ( - )
    file1 close-file drop ; \ abort" Close file error" ;

: bytes-left  ( - n )
    file1 file-size abort" Get file size error" drop file1 file-position
    abort" Get file position error" drop - ;

: repos  ( n - )
    0 file1 reposition-file abort" Reposition file error" ;

: read  ( adr bytes - )
    file1 read-file abort" Read file error" drop ;

: write ( adr bytes - )
    file1 write-file abort" Write file error" ;

: read> ( $ c - <code> )  ( a c - )
    r/o[ bytes-left allocate throw
        dup bytes-left 2dup read  r> execute
        free throw
    ]file ;

create crlf 2 c, $0d c, $0a c, 
: lines> ( a c - <code> ) ( a c - )
    begin over >r crlf count search while
        over r> swap over - r@ execute
        2 /string
    repeat
    r> drop
    dup if  r@ execute  else  2drop  then
    r> drop ;