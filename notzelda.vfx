require engine.vfx
require obj/bouncer.vfx
require stage.vfx

obj tilemaps
tilemaps {
    s" assets/1-1_g1.csv" csv-map: 1-1_g1.tm { }
    s" data/csv/world_background.csv" csv-map: world.tm { }
}

: get-params params me params drop swap move ;
: mimic x v@ 2>r nam @ >r   get-params   r> nam ! 2r> x v! ;
bg0 { world.tm mimic   16 256 * tmo ! }

z" data/bmp/tbank_initial.png" 0 loadbank
z" data/bmp/samurai.pcx" 17 loadbank
z" data/bmp/world_tiles.png" 16 loadbank

z" data/bmp/bg-palette.png" loadbmp constant bg-palette.bmp
z" data/bmp/vga-palette.png" loadbmp constant vga-palette.bmp

c: *wowww
    4. 4. sx v!
    draw>
    bg-palette.bmp ctr @ p>s 31 and 32 - setpal
    bg-palette.bmp ctr @ p>s 31 and setpal
    0.2 delta* ctr +!
    0 0 at palette.bmp blit 
;
game { 0 0 at *wowww named wowww }
bg-palette.bmp 0 setpal

create buf 4 cells allot
: cycle-water
    palette.bmp lockbmp drop | a |
    4 for   i 17 + a [] @  i 1 - 0 4 wrap buf [] !   loop
    buf 17 a [] 4 cells move
    palette.bmp -lockbmp
;
\ c: *cycler 0 perform> begin cycle-water 1. 10 / wait again ;
\ game { *cycler } 

fget obj/sam
actors {
    200 200 at *sam named sam { }
}

sam to target
