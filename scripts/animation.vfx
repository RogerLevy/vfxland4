require scripts/tilemap.vfx
require lib/filetypes.vfx

obj animations
obj temp

motif var tl var tlt var spd var ac var af /obj to /basis \ add animation capability to everything

\ - Runtime rendering
: ?+ac delta spd @ p/ ac +! ;
: keyframe { 0 me #children wrap me nth-child as children } ;
: animate spd ! tl ! draw> ac @ p>s tl @ keyframe ?+ac ;

\ - Tile keyframes
motif var ti
: draw-tile draw> ti @ tile+ ;
: ser-tile ser> ti ? ." ti !" ;
object: *tile 16. 16. w v! draw-tile ser-tile ; 

\ - Editor variables
0 value kf#
0 value editor
0 value anmc
\ 0 value tool \ object
0 value pspr

\ obj modify-tool  
\ obj create-tool

\ - Editor actions
: anm anmc -> first @ ;
: hide-each each> hide on ;
: sel anm hide-each  anm nth-child -> hide off ;
: kf! 0 anm #children wrap to kf#  kf# sel ;
: +kf kf# + kf! ;
\ : tlpath z[ ." fig/tl/" type ." .vfx" ]z zcount ;
\ : load anmc clear anmc { 0 parse tlpath included } ;
: +.tl count pad place s" .tl" pad append pad ;

\ - Editor components 1/2
: (status)
    z[ kf# 1 + . ." / " anm #children . ]z white stext nr
\    z[ tool .name ]z white stext nr
;

\ - Editor components 2/2
: crosshairs 0 -64 +at 0 128 black line -64 64 +at 128 0 black line 64 0 +at ;
object: *preview 2. 2. sx 2! draw> crosshairs ;
object: *editor 2. 2. sx 2! draw> crosshairs ;
object: *status draw> (status) ;
object: *aed draw> z[ ." AED" ]z white stext ;
object: *timeline ;
object: *keyframe ; 
object: *pspr ser> tl @ .name spd p? ." animate" ;

\ Save/load
: loadfig included me -> last @ ;
: edit anmc -> first @ ?dup if animations push then anmc push 0 kf! pspr { anm 0.25 animate } ;
: (save) anm -> nam @ count tlpath name>path 2dup f[ anm o.r ]f cr ." Saved to " type ;
: ?ext ?dup if -ext pad place s" .vfx" pad append pad count then ;
: chooser z" fig/tl" z" Load Timeline" z" *.vfx" 0 file-dialog ?ext ;
: load chooser ?dup if loadfig edit then ;
: new *timeline { *keyframe { } me } edit ;
: rename pad place s" .tl" pad append anm pad name drop ;
: saveas chooser ?dup if -path -ext rename (save) then ;
: save anm -> nam @ if (save) else saveas then ;

\ - Test
include fig/tl/test.vfx

\ - Editor layout
apps {
    0 0 at *aed named aed {
        winw 0.16666 p* 200 at *preview named preview { 
            0 0 at *pspr named pspr { } 
        }
        winw 0.5 p* 200 at *editor named editor {
            0 0 at *generic named anmc { }
            -64 64 at *status { } 
        }
    }
}

: insert-after 2dup insert swap insert ;

: ckf kf# anm nth-child ;
: spos -> x v@ 2p>s ;

\ - Editor controls (besides shed-provided actions)
editor { :noname
    respond>
    ui? ?;
    ALLEGRO_EVENT_KEY_CHAR happened? if
        the-char case
            [char] z of -1 +kf endof
            [char] x of 1 +kf endof
            [char] a of *keyframe ckf insert-after endof
            [char] d of anm #children 1 > if ckf remove then endof
        endcase
    then
    ALLEGRO_EVENT_KEY_DOWN happened? if
        the-key case
            <del> of ?delete endof
            <space> of ckf { mouse editor spos 2- 2. 2. 2p/ 8 8 2- at *tile { 1 ti ! } } endof
            <s> of ctrl? if shift? if saveas else save then then endof
            <l> of ctrl? if load then endof
            <o> of ctrl? if load then endof
            <n> of ctrl? if new then endof
        endcase
    then
    0 +kf 
; execute }

0.75e fdup fdup 1e backdrop 4f!
test.tl edit 

-1 to always-drag?

