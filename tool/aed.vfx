require obj/tilemap.vfx
require obj/tile.vfx
require sys/filetypes.vfx

\ - Editor variables
PUBLIC
obj animations
reference aed

PRIVATE
reference editor
reference anmc
reference pspr
reference tsel
0 value kf#
variable cti
create ctw 1 , here 1 , constant cth
variable cspd 20. cspd !
0 value anm

\ - Editor actions
: ckf kf# anm nth-child ;
: sel anm disable-each   anm nth-child on ;
: kf! 0 anm #children wrap to kf#   kf# sel ;
: +kf kf# + kf! ;
: duplicate ckf clone ckf insert-after   1 +kf ;
: tcenter ctw v@ 8. 8. 2p* 2- ;
: lay ckf { anmc { mouse s>local } tcenter at *tile } { cti @ ti !   ctw v@ tile:dims!   ?snap   me select } ;
: ?lay editor { over? } 0; lay ;
: small sherry16.fnt font ! ;
: big sherry32.fnt font ! ;
: bank 256 * anm -> tio ! ;
: subbank@ anm -> tio @ 256 / ;
: size ctw v! ;
: add-frame anm -> tio @   *keyframe ckf insert-after   1 +kf   anm -> tio ! ;
: nudge this anm descendant? if this -> x v+! else 2drop then ; \ this { _bolted a? if 2drop else x v+! then } ;
: speed dup cspd ! pspr -> spd ! ;
: slowest 5. speed ;
: slow 10. speed ;
: normal 15. speed ;
: fast 20. speed ;
: fastest 30. speed ;
: narrower ctw @ 1 - 1 max ctw ! ;
: wider ctw @ 1 + 16 min ctw ! ;
: shorter cth @ 1 - 1 max cth ! ;
: taller cth @ 1 + 16 min cth ! ;

\ - Hovering and dragging keyframe contents
: hover-anm anmc { a+t anm { hover } -t } ;
: drag-anm hoveree pickdrag   anmc drag-context ;

\ - Editor components 1/2
: (status)
    z[ kf# 1 + . ." / " anm #children . ]z white stext nr
    z[ ." Mouse XY: " mouse anmc { s>local } swap . . ]z white stext nr
    z[ ." Tile: " cti @ . ]z white stext nr
    z[ ." Subbank: " subbank@ . ]z white stext nr
    z[ ." Size: " ctw v@ swap . . ]z stext nr
;
: tsel-act act> over? 0;
    1 mpressed? if mouse s>local 16. 16. 2p/ 16 * + cti ! then ;
: .anm anm ?dup if .name then ;
: tsel-draw draw>
    subbank@ subbank at w v@ 2p>s subbmp dup  0 0 at blit  -bmp ;

: aed-ser ser> ." post: " anm { nam @ if me .name ." edit " then } kf# . ." kf! " ;

: ?2tsnap 2s>p snapping @ if tsnap swap tsnap swap then 2pround ;

: ghost mouse s>local tcenter ?2tsnap 2p>s at $ffffff80 color   ctw v@ cti @ anm -> tio @ + tiles ;

\ - Editor components 2/2
: crosshairs 64 0 +at 0 128 black line   -64 64 +at 128 0 black line   64 0 +at ;
c: *preview 3. 3. sx 2!   draw> crosshairs ;
c: *status draw> big z[ .anm ]z white stext   0 32 +at small (status) ;
c: *pspr ser> tl @ -> nam @ 0; tl @ .name spd p? ." animate " ;
c: *tsel 256. 256. w v! tsel-act tsel-draw ;
PUBLIC
c: *aed aed-ser ;
PRIVATE

\ Save/load
: edit to anm 0 kf! pspr { anm cspd @ animate } ;
: (anm-save) anm tlpath osave ;
: ?ext ?dup if -ext pad place s" .tl" pad append pad count then ;
: chooser z" fig/tl" z" Load Timeline" z" *.tl" 0 file-dialog ?ext ;
: anm-load chooser ?dup if ws { oload } edit then ;
create untitled$ ," UNTITLED.TL"
: new 0 0 at *timeline untitled$ name { nam @ count tlpath name>path 1extension   *keyframe { } me } edit ;
: rename pad place s" .tl" pad append   anm pad name drop ;
: ?clone anm -> nam @ if anm clone edit then ;
: anm-saveas chooser ?dup if -path -ext ?clone rename (anm-save) then ;
: untitled? anm -> nam @ count untitled$ count compare 0= ;
: anm-save untitled? if anm-saveas else (anm-save) then ;

\ - Animation editor
defer editor-respond
c: *editor
    editor-respond
    draw>
        crosshairs
        editmode @ not if
            ghost
            anmc { +t
                anm { editmode on draw editmode off }
                \ anm { edit-info }
                hoveree if hoveree anm descendant? if hoveree { +t yellow outline -t } then then 
                this anm descendant? if this { +t red outline -t } then
            -t }
        then
;


\ - Editor layout
workspace {
    0 0 at *aed named aed {
        0 0 at *toolbox { ` AED`
            0 32 at *generic { [bolted]
                0 0 at *toolbox { ` Editor`
                    0 32 at *spanel { 384. 384. w v! [bolted]
                        0 0 at *editor named editor { 128. 128. w v! 3. 3. sx 2! [bolted]
                            64 64 at *generic named anmc { [bolted] }
                        }
                    }
                }
                winw 384 - 0 at *toolbox { ` Preview`
                    0 32 at *spanel { 384. 384. w v! [bolted]
                        0 0 at *preview named preview { [bolted]
                            64 64 at *pspr named pspr { [bolted] } 
                        }
                    }
                }
                16 winh 2 / 40 + at *toolbox { ` Tiles`
                    0 32 at *generic {
                        0 0 at *panel { 40. 256. w v! [bolted]
                            button: 1x 1. 1. tsel -> parent @ -> sx v! ; <nr 
                            button: 2x 2. 2. tsel -> parent @ -> sx v! ; <nr
                        }
                        70 0 at *spanel { 256. 256. w v! [bolted]
                            0 0 at *tsel named tsel { [bolted] }
                        }
                    }
                }
                256 150 + winh 2 / 40 + at *toolbox { ` Tools`
                    0 32 at *panel { 200. 200. w v! [bolted]
                        8 8 at
                        *button { ` snapping toggle` }
                        \ *button { ` refresh-tbank` [nr] }
                        *button { ` 0 bank` }
                        *button { ` 1 bank` }
                        *button { ` 2 bank` }
                        *button { ` 3 bank` [nr] }
                        *button { ` 4 bank` }
                        *button { ` 5 bank` }
                        *button { ` 6 bank` }
                        *button { ` 7 bank` [nr] }
                        *button { ` slowest` }
                        *button { ` slow` }
                        *button { ` normal` }
                        *button { ` fast` }
                        *button { ` fastest` [nr] }
                        *button { ` narrower` }
                        *button { ` wider` }
                        *button { ` shorter` }
                        *button { ` taller` }
                    }
                }
                390 0 at *toolbox { ` Status`
                    0 32 at *status { } 
                }     
            }               
        }
    }
}

: lock&seal each> [locked] [sealed] me recurse ; 
aed lock&seal

\ - Editor controls (besides shed-provided actions)
:noname [ is editor-respond ]
    respond>
        ALLEGRO_EVENT_KEY_CHAR happened? if
            the-char case
                [char] z of -1 +kf endof
                [char] x of 1 +kf endof
                [char] a of add-frame endof
                ( bksp ) 8 of anm #children 1 > if ckf remove then endof
            endcase
            the-key case
                <del> of delete-this endof
                <left> of -1. 0 nudge endof
                <right> of 1. 0 nudge endof
                <up> of 0 -1. nudge endof
                <down> of 0 1. nudge endof
            endcase
        then
        ALLEGRO_EVENT_KEY_DOWN happened? if
            the-key case
                <space> of ?lay endof
                <s> of ctrl? if shift? if anm-saveas else anm-save then then endof
                <l> of ctrl? if anm-load then endof
                <o> of ctrl? if anm-load then endof
                <n> of ctrl? if new then endof
                <d> of ctrl? if duplicate then endof
            endcase
        then
        0 +kf 

        \ Mouse
        ALLEGRO_EVENT_MOUSE_AXES happened? if
            over? if
                hover-anm
            then
        then

        ALLEGRO_EVENT_MOUSE_BUTTON_DOWN happened? if
            over? if
                the-mbutton 1 = if
                    hoveree if hoveree anm descendant? if
                        drag-anm
                    then then
                then
            then
        then
        click? the-mbutton 2 = and if
            over? if toggle-editmenu then
        then

;
editor { editor-respond } 

0.75e fdup fdup 1e backdrop 4f!

new

PREVIOUS DEFINITIONS